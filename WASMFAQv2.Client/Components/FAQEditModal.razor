@inject IFAQApiService FAQApiService

<MudDialog>
    <TitleContent>
        @AppStrings.EditModalTitle
    </TitleContent>
    <DialogContent>
        <EditForm EditContext="editContext">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField Label="@AppStrings.Title" @bind-Value="faq.Title" Required="true" />
                </MudItem>
                <MudItem xs="12">
                    <MudTextField Label="@AppStrings.Description" @bind-Value="faq.Description" Required="true" />
                </MudItem>
            </MudGrid>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" OnClick="Submit">@AppStrings.OK</MudButton>
    </DialogActions>
</MudDialog>

@code {

    private EditContext? editContext;

    [CascadingParameter]
    private IMudDialogInstance? MudDialog { get; set; }

    [Parameter]
    public FAQ faq { get; set; } = new();

    private void Submit()
    {
        MudDialog!.Close(DialogResult.Ok(faq));
    }

    private void Cancel() => MudDialog!.Cancel();

    protected override void OnInitialized()
    {
        editContext = new EditContext(faq);
    }
}